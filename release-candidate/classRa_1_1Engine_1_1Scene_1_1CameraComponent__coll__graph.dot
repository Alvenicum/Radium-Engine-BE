digraph "Ra::Engine::Scene::CameraComponent"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{Ra::Engine::Scene::\lCameraComponent\n|# m_camera\l|+ CameraComponent()\l+ ~CameraComponent()\l+ initialize()\l+ show()\l+ updateTransform()\l+ duplicate()\l+ getCamera()\l+ getCamera()\l+ getRenderObject()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{Ra::Engine::Scene::\lComponent\n|+ m_renderObjects\l# m_name\l|+ Component()\l+ ~Component()\l+ initialize()\l+ setEntity()\l+ getEntity()\l+ getName()\l+ setSystem()\l+ getSystem()\l+ addRenderObject()\l+ removeRenderObject()\l+ canEdit()\l+ getTransform()\l+ setTransform()\l+ notifyRenderObjectExpired()\l+ computeAabb()\l+ invalidateAabb()\l+ getRenderObjects()\l# getRoMgr()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRa_1_1Engine_1_1Scene_1_1Component.html",tooltip="A component is an element that can be updated by a system. It is also linked to some other components..."];
  Node3 -> Node2 [color="grey25",fontsize="10",style="solid",label=" #m_entity" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{Ra::Engine::Scene::\lEntity\n||+ Entity()\l+ Entity()\l+ operator=()\l+ ~Entity()\l+ getName()\l+ rename()\l+ setTransform()\l+ setTransform()\l+ getTransform()\l+ getTransformAsMatrix()\l+ swapTransformBuffers()\l+ transformationObservers()\l+ addComponent()\l+ removeComponent()\l+ getComponent()\l+ getComponent()\l+ getComponents()\l+ getNumComponents()\l+ computeAabb()\l+ invalidateAabb()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRa_1_1Engine_1_1Scene_1_1Entity.html",tooltip="An entity is an scene element. It ties together components with a transform."];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{Ra::Core::Utils::Indexed\lObject\n|# m_idx\l|+ IndexedObject()\l+ IndexedObject()\l+ ~IndexedObject()\l+ setIndex()\l+ getIndex()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRa_1_1Core_1_1Utils_1_1IndexedObject.html",tooltip=" "];
  Node5 -> Node2 [color="grey25",fontsize="10",style="solid",label=" #m_system" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{Ra::Engine::Scene::\lSystem\n|# m_components\l|+ System()\l+ ~System()\l+ handleAssetLoading()\l+ generateTasks()\l+ getEntityComponents()\l+ addComponent()\l# registerComponent()\l# unregisterComponent()\l# unregisterAllComponents()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRa_1_1Engine_1_1Scene_1_1System.html",tooltip=" "];
  Node6 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #m_RO" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{Ra::Engine::Rendering\l::RenderObject\n||+ RenderObject()\l+ ~RenderObject()\l+ updateGL()\l+ hasBeenRenderedOnce()\l+ hasExpired()\l+ setLifetime()\l+ render()\l+ render()\l+ invalidateAabb()\l+ getName()\l+ getComponent()\l+ getComponent()\l+ getType()\l+ setType()\l+ setVisible()\l+ toggleVisible()\l+ isVisible()\l+ setPickable()\l+ togglePickable()\l+ isPickable()\l+ setXRay()\l+ toggleXRay()\l+ isXRay()\l+ setTransparent()\l+ toggleTransparent()\l+ isTransparent()\l+ setColoredByVertexAttrib()\l+ toggleColoredByVertexAttrib()\l+ isColoredByVertexAttrib()\l+ isDirty()\l+ setRenderTechnique()\l+ getRenderTechnique()\l+ getRenderTechnique()\l+ setMaterial()\l+ getMaterial()\l+ getMaterial()\l+ setMesh()\l+ getMesh()\l+ getMesh()\l+ getTransform()\l+ getTransformAsMatrix()\l+ computeAabb()\l+ setLocalTransform()\l+ setLocalTransform()\l+ getLocalTransform()\l+ getLocalTransformAsMatrix()\l+ createRenderObject()\l* getName()\l* getComponent()\l* getComponent()\l* getType()\l* setType()\l* setVisible()\l* toggleVisible()\l* isVisible()\l* setPickable()\l* togglePickable()\l* isPickable()\l* setXRay()\l* toggleXRay()\l* isXRay()\l* setTransparent()\l* toggleTransparent()\l* isTransparent()\l* setColoredByVertexAttrib()\l* toggleColoredByVertexAttrib()\l* isColoredByVertexAttrib()\l* isDirty()\l* setRenderTechnique()\l* getRenderTechnique()\l* getRenderTechnique()\l* setMaterial()\l* getMaterial()\l* getMaterial()\l* setMesh()\l* getMesh()\l* getMesh()\l* getTransform()\l* getTransformAsMatrix()\l* computeAabb()\l* setLocalTransform()\l* setLocalTransform()\l* getLocalTransform()\l* getLocalTransformAsMatrix()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRa_1_1Engine_1_1Rendering_1_1RenderObject.html",tooltip=" "];
  Node4 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
}
