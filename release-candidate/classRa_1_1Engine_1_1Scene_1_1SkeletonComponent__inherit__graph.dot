digraph "Ra::Engine::Scene::SkeletonComponent"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{Ra::Engine::Scene::\lSkeletonComponent\n||+ SkeletonComponent()\l+ ~SkeletonComponent()\l+ SkeletonComponent()\l+ operator=()\l+ initialize()\l+ canEdit()\l+ getTransform()\l+ setTransform()\l+ handleSkeletonLoading()\l+ handleAnimationLoading()\l+ getSkelName()\l+ setSkeleton()\l+ getSkeleton()\l+ getAnimationCount()\l+ getAnimation()\l+ getAnimation()\l+ addNewAnimation()\l+ removeAnimation()\l+ useAnimation()\l+ getAnimationId()\l+ update()\l+ getAnimationTime()\l+ getAnimationTimeInterval()\l+ setSpeed()\l+ getSpeed()\l+ autoRepeat()\l+ isAutoRepeat()\l+ pingPong()\l+ isPingPong()\l+ setXray()\l+ isXray()\l+ toggleSkeleton()\l+ isShowingSkeleton()\l+ getBoneRO2idx()\l+ updateDisplay()\l+ setManipulationScheme()\l+ getManipulationScheme()\l* initialize()\l* canEdit()\l* getTransform()\l* setTransform()\l* handleSkeletonLoading()\l* handleAnimationLoading()\l* getSkelName()\l* setSkeleton()\l* getSkeleton()\l* getAnimationCount()\l* getAnimation()\l* getAnimation()\l* addNewAnimation()\l* removeAnimation()\l* useAnimation()\l* getAnimationId()\l* update()\l* getAnimationTime()\l* getAnimationTimeInterval()\l* setSpeed()\l* getSpeed()\l* autoRepeat()\l* isAutoRepeat()\l* pingPong()\l* isPingPong()\l* setXray()\l* isXray()\l* toggleSkeleton()\l* isShowingSkeleton()\l* getBoneRO2idx()\l* updateDisplay()\l* setManipulationScheme()\l* getManipulationScheme()\l* setupIO()\l* getRefPoseOutput()\l* getAnimationOutput()\l* getTimeOutput()\l* getWasReset()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{Ra::Engine::Scene::\lComponent\n|+ m_renderObjects\l# m_name\l# m_entity\l# m_system\l|+ Component()\l+ ~Component()\l+ initialize()\l+ setEntity()\l+ getEntity()\l+ getName()\l+ setSystem()\l+ getSystem()\l+ addRenderObject()\l+ removeRenderObject()\l+ canEdit()\l+ getTransform()\l+ setTransform()\l+ notifyRenderObjectExpired()\l+ computeAabb()\l+ invalidateAabb()\l+ getRenderObjects()\l# getRoMgr()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRa_1_1Engine_1_1Scene_1_1Component.html",tooltip="A component is an element that can be updated by a system. It is also linked to some other components..."];
}
