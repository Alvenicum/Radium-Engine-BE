digraph "Ra::Core::Asset::AssetData"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{Ra::Core::Asset::AssetData\n|# m_name\l|+ AssetData()\l+ AssetData()\l+ ~AssetData()\l+ getName()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{Ra::Core::Asset::AnimationData\n|# m_time\l# m_dt\l# m_keyFrame\l|+ AnimationData()\l+ ~AnimationData()\l+ setName()\l+ displayInfo()\l+ getTime()\l+ setTime()\l+ getTimeStep()\l+ setTimeStep()\l+ getFramesSize()\l+ getHandleData()\l+ setHandleData()\l* getTime()\l* setTime()\l* getTimeStep()\l* setTimeStep()\l* getFramesSize()\l* getHandleData()\l* setHandleData()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRa_1_1Core_1_1Asset_1_1AnimationData.html",tooltip=" "];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{Ra::Core::Asset::GeometryData\n|# m_frame\l# m_type\l# m_geometry\l# m_primitiveCount\l# m_material\l|+ GeometryData()\l+ GeometryData()\l+ ~GeometryData()\l+ displayInfo()\l+ setName()\l+ getType()\l+ setType()\l+ getFrame()\l+ setFrame()\l+ getMaterial()\l+ setMaterial()\l+ getGeometry()\l+ getGeometry()\l+ isPointCloud()\l+ isLineMesh()\l+ isTriMesh()\l+ isQuadMesh()\l+ isPolyMesh()\l+ isTetraMesh()\l+ isHexMesh()\l+ hasEdges()\l+ hasFaces()\l+ hasPolyhedra()\l+ hasMaterial()\l+ setPrimitiveCount()\l+ getPrimitiveCount()\l* setName()\l* getType()\l* setType()\l* getFrame()\l* setFrame()\l* getMaterial()\l* setMaterial()\l* getGeometry()\l* getGeometry()\l* isPointCloud()\l* isLineMesh()\l* isTriMesh()\l* isQuadMesh()\l* isPolyMesh()\l* isTetraMesh()\l* isHexMesh()\l* hasEdges()\l* hasFaces()\l* hasPolyhedra()\l* hasMaterial()\l* setPrimitiveCount()\l* getPrimitiveCount()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRa_1_1Core_1_1Asset_1_1GeometryData.html",tooltip=" "];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{Ra::Core::Asset::HandleData\n||+ HandleData()\l+ HandleData()\l+ ~HandleData()\l+ getVertexSize()\l+ setVertexSize()\l+ setNameTable()\l+ recomputeAllIndices()\l+ displayInfo()\l+ setName()\l+ getType()\l+ setType()\l+ getFrame()\l+ setFrame()\l+ addBindMesh()\l+ getBindMeshes()\l+ getComponentDataSize()\l+ getComponentData()\l+ getComponentData()\l+ getComponent()\l+ getComponent()\l+ setComponents()\l+ getEdgeData()\l+ getEdgeData()\l+ setEdges()\l+ getFaceData()\l+ getFaceData()\l+ setFaces()\l+ needEndNodes()\l+ isPointCloud()\l+ isSkeleton()\l+ isCage()\l+ hasComponents()\l+ hasEdges()\l+ hasFaces()\l+ needsEndNodes()\l+ getIndexOf()\l* setName()\l* getType()\l* setType()\l* getFrame()\l* setFrame()\l* addBindMesh()\l* getBindMeshes()\l* getComponentDataSize()\l* getComponentData()\l* getComponentData()\l* getComponent()\l* getComponent()\l* setComponents()\l* getEdgeData()\l* getEdgeData()\l* setEdges()\l* getFaceData()\l* getFaceData()\l* setFaces()\l* needEndNodes()\l* isPointCloud()\l* isSkeleton()\l* isCage()\l* hasComponents()\l* hasEdges()\l* hasFaces()\l* needsEndNodes()\l* getIndexOf()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRa_1_1Core_1_1Asset_1_1HandleData.html",tooltip=" "];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{Ra::Core::Asset::LightData\n|+ m_color\l+ m_dirlight\l+ m_pointlight\l+ m_spotlight\l+ m_arealight\l+ @1\l# m_frame\l# m_type\l|+ LightData()\l+ LightData()\l+ ~LightData()\l+ setName()\l+ getFrame()\l+ setFrame()\l+ setLight()\l+ setLight()\l+ setLight()\l+ setLight()\l+ getType()\l+ isPointLight()\l+ isSpotLight()\l+ isDirectionalLight()\l+ isAreaLight()\l+ displayInfo()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRa_1_1Core_1_1Asset_1_1LightData.html",tooltip=" "];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node6 [label="{Ra::Core::Asset::MaterialData\n||+ MaterialData()\l+ ~MaterialData()\l+ setName()\l+ getType()\l+ setType()\l+ displayInfo()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRa_1_1Core_1_1Asset_1_1MaterialData.html",tooltip="represent material data loaded by a file loader. Material data must be identified by a unique name...."];
  Node6 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node7 [label="{Ra::Core::Asset::RawShader\lMaterialData\n||+ RawShaderMaterialData()\l+ RawShaderMaterialData()\l+ RawShaderMaterialData()\l+ ~RawShaderMaterialData()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRa_1_1Core_1_1Asset_1_1RawShaderMaterialData.html",tooltip=" "];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node8 [label="{Ra::Core::Asset::VolumeData\n|+ volume\l+ sigma_a\l+ sigma_s\l+ boundingBox\l+ densityToModel\l+ modelToWorld\l|+ VolumeData()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structRa_1_1Core_1_1Asset_1_1VolumeData.html",tooltip=" "];
}
