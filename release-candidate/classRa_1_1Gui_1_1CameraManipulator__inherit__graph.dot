digraph "Ra::Gui::CameraManipulator"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{Ra::Gui::CameraManipulator\n|# m_cameraSensitivity\l# m_quickCameraModifier\l# m_wheelSpeedModifier\l# m_targetedAabb\l# m_targetedAabbVolume\l# m_mapCameraBahaviourToAabb\l# m_target\l# m_currentAction\l# m_camera\l# m_light\l|+ CameraManipulator()\l+ CameraManipulator()\l+ ~CameraManipulator()\l+ mappingContext()\l+ handleMousePressEvent()\l+ handleMouseReleaseEvent()\l+ handleMouseMoveEvent()\l+ handleWheelEvent()\l+ handleKeyPressEvent()\l+ handleKeyReleaseEvent()\l+ getCamera()\l+ getCamera()\l+ updateCamera()\l+ attachLight()\l+ hasLightAttached()\l+ getLight()\l+ mapCameraBehaviourToAabb()\l+ unmapCameraBehaviourToAabb()\l+ fitScene()\l+ setCameraPosition()\l+ setCameraTarget()\l+ resetCamera()\l+ setCameraSensitivity()\l+ setCameraFov()\l+ setCameraFovInDegrees()\l+ setCameraZNear()\l+ setCameraZFar()\l* setCameraSensitivity()\l* setCameraFov()\l* setCameraFovInDegrees()\l* setCameraZNear()\l* setCameraZFar()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="The CameraManipulator class is the generic class for camera manipulators."];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{Ra::Gui::FlightCameraManipulator\n|# m_lastMouseX\l# m_lastMouseY\l# m_rotateAround\l# m_cameraRotateMode\l# m_cameraPanMode\l# m_cameraZoomMode\l|+ FlightCameraManipulator()\l+ FlightCameraManipulator()\l+ FlightCameraManipulator()\l+ ~FlightCameraManipulator()\l+ mappingContext()\l+ handleMousePressEvent()\l+ handleMouseReleaseEvent()\l+ handleMouseMoveEvent()\l+ handleWheelEvent()\l+ handleKeyPressEvent()\l+ toggleRotateAround()\l+ updateCamera()\l+ setCameraPosition()\l+ setCameraTarget()\l+ fitScene()\l+ resetCamera()\l# handleCameraRotate()\l# handleCameraPan()\l# handleCameraZoom()\l# handleCameraZoom()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRa_1_1Gui_1_1FlightCameraManipulator.html",tooltip=" "];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{Ra::Gui::TrackballCamera\lManipulator\n|# m_lastMouseX\l# m_lastMouseY\l# m_phi\l# m_theta\l# m_phiDir\l# m_referenceFrame\l# m_distFromCenter\l|+ TrackballCameraManipulator()\l+ TrackballCameraManipulator()\l+ ~TrackballCameraManipulator()\l+ handleMousePressEvent()\l+ handleMouseReleaseEvent()\l+ handleMouseMoveEvent()\l+ handleWheelEvent()\l+ handleKeyPressEvent()\l+ toggleRotateAround()\l+ updateCamera()\l+ setTrackballRadius()\l+ getTrackballRadius()\l+ getTrackballCenter()\l+ mappingContext()\l+ setCameraPosition()\l+ setCameraTarget()\l+ fitScene()\l+ resetCamera()\l# handleCameraRotate()\l# handleCameraPan()\l# handleCameraZoom()\l# handleCameraZoom()\l# handleCameraMoveForward()\l# handleCameraMoveForward()\l# updatePhiTheta()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRa_1_1Gui_1_1TrackballCameraManipulator.html",tooltip="A Trackball manipulator for Cameras."];
}
