digraph "Ra::Gui::FlightCameraManipulator"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{Ra::Gui::FlightCameraManipulator\n|# m_lastMouseX\l# m_lastMouseY\l# m_rotateAround\l# m_cameraRotateMode\l# m_cameraPanMode\l# m_cameraZoomMode\l|+ FlightCameraManipulator()\l+ FlightCameraManipulator()\l+ FlightCameraManipulator()\l+ ~FlightCameraManipulator()\l+ mappingContext()\l+ handleMousePressEvent()\l+ handleMouseReleaseEvent()\l+ handleMouseMoveEvent()\l+ handleWheelEvent()\l+ handleKeyPressEvent()\l+ toggleRotateAround()\l+ updateCamera()\l+ setCameraPosition()\l+ setCameraTarget()\l+ fitScene()\l+ resetCamera()\l# handleCameraRotate()\l# handleCameraPan()\l# handleCameraZoom()\l# handleCameraZoom()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{Ra::Gui::CameraManipulator\n|# m_cameraSensitivity\l# m_quickCameraModifier\l# m_wheelSpeedModifier\l# m_targetedAabb\l# m_targetedAabbVolume\l# m_mapCameraBahaviourToAabb\l# m_target\l# m_currentAction\l|+ CameraManipulator()\l+ CameraManipulator()\l+ ~CameraManipulator()\l+ mappingContext()\l+ handleMousePressEvent()\l+ handleMouseReleaseEvent()\l+ handleMouseMoveEvent()\l+ handleWheelEvent()\l+ handleKeyPressEvent()\l+ handleKeyReleaseEvent()\l+ getCamera()\l+ getCamera()\l+ updateCamera()\l+ attachLight()\l+ hasLightAttached()\l+ getLight()\l+ mapCameraBehaviourToAabb()\l+ unmapCameraBehaviourToAabb()\l+ fitScene()\l+ setCameraPosition()\l+ setCameraTarget()\l+ resetCamera()\l+ setCameraSensitivity()\l+ setCameraFov()\l+ setCameraFovInDegrees()\l+ setCameraZNear()\l+ setCameraZFar()\l* setCameraSensitivity()\l* setCameraFov()\l* setCameraFovInDegrees()\l* setCameraZNear()\l* setCameraZFar()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRa_1_1Gui_1_1CameraManipulator.html",tooltip="The CameraManipulator class is the generic class for camera manipulators."];
  Node3 -> Node2 [color="grey25",fontsize="10",style="solid",label=" #m_camera" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{Ra::Core::Asset::Camera\n|+ m_minZNear\l+ m_minZRange\l|+ Camera()\l+ ~Camera()\l+ operator=()\l+ getFrame()\l+ setFrame()\l+ getPosition()\l+ setPosition()\l+ getDirection()\l+ setDirection()\l+ getUpVector()\l+ setUpVector()\l+ getRightVector()\l+ getRayFromScreen()\l+ projectToScreen()\l+ projectToNDC()\l+ unProjectFromScreen()\l+ unProjectFromScreen()\l+ unProjectFromNDC()\l+ getType()\l+ setType()\l+ getZoomFactor()\l+ setZoomFactor()\l+ getFOV()\l+ setFOV()\l+ getMinZNear()\l+ getMinZRange()\l+ getProjMatrix()\l+ getViewMatrix()\l+ updateProjMatrix()\l+ setProjMatrix()\l+ getZNear()\l+ setZNear()\l+ getZFar()\l+ setZFar()\l+ getWidth()\l+ getHeight()\l+ getAspect()\l+ setXYmag()\l+ getXYmag()\l+ setViewport()\l+ applyTransform()\l+ fitZRange()\l+ perspective()\l+ frustum()\l+ ortho()\l* m_fov\l* m_xmag\l* m_ymag\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRa_1_1Core_1_1Asset_1_1Camera.html",tooltip="Camera class storing the Camera frame and the projection properties The view direction is -z in camer..."];
  Node4 -> Node2 [color="grey25",fontsize="10",style="solid",label=" #m_light" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{Ra::Engine::Scene::\lLight\n||+ Light()\l+ ~Light()\l+ getColor()\l+ setColor()\l+ setDirection()\l+ setPosition()\l+ getType()\l+ getRenderParameters()\l+ getShaderInclude()\l+ initialize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRa_1_1Engine_1_1Scene_1_1Light.html",tooltip=" "];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{Ra::Engine::Scene::\lComponent\n|+ m_renderObjects\l# m_name\l|+ Component()\l+ ~Component()\l+ initialize()\l+ setEntity()\l+ getEntity()\l+ getName()\l+ setSystem()\l+ getSystem()\l+ addRenderObject()\l+ removeRenderObject()\l+ canEdit()\l+ getTransform()\l+ setTransform()\l+ notifyRenderObjectExpired()\l+ computeAabb()\l+ invalidateAabb()\l+ getRenderObjects()\l# getRoMgr()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRa_1_1Engine_1_1Scene_1_1Component.html",tooltip="A component is an element that can be updated by a system. It is also linked to some other components..."];
  Node6 -> Node5 [color="grey25",fontsize="10",style="solid",label=" #m_entity" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{Ra::Engine::Scene::\lEntity\n||+ Entity()\l+ Entity()\l+ operator=()\l+ ~Entity()\l+ getName()\l+ rename()\l+ setTransform()\l+ setTransform()\l+ getTransform()\l+ getTransformAsMatrix()\l+ swapTransformBuffers()\l+ transformationObservers()\l+ addComponent()\l+ removeComponent()\l+ getComponent()\l+ getComponent()\l+ getComponents()\l+ getNumComponents()\l+ computeAabb()\l+ invalidateAabb()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRa_1_1Engine_1_1Scene_1_1Entity.html",tooltip="An entity is an scene element. It ties together components with a transform."];
  Node7 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node7 [label="{Ra::Core::Utils::Indexed\lObject\n|# m_idx\l|+ IndexedObject()\l+ IndexedObject()\l+ ~IndexedObject()\l+ setIndex()\l+ getIndex()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRa_1_1Core_1_1Utils_1_1IndexedObject.html",tooltip=" "];
  Node8 -> Node5 [color="grey25",fontsize="10",style="solid",label=" #m_system" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 [label="{Ra::Engine::Scene::\lSystem\n|# m_components\l|+ System()\l+ ~System()\l+ handleAssetLoading()\l+ generateTasks()\l+ getEntityComponents()\l+ addComponent()\l# registerComponent()\l# unregisterComponent()\l# unregisterAllComponents()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRa_1_1Engine_1_1Scene_1_1System.html",tooltip=" "];
  Node9 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node9 [label="{Ra::Gui::KeyMappingManageable\l\< FlightCameraManipulator \>\n||+ getContext()\l+ configureKeyMapping()\l# self()\l# setContext()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRa_1_1Gui_1_1KeyMappingManageable.html",tooltip=" "];
  Node10 -> Node9 [dir="back",color="orange",fontsize="10",style="solid",label=" \< FlightCameraManipulator \>" ,fontname="Helvetica"];
  Node10 [label="{Ra::Gui::KeyMappingManageable\< T \>\n||+ getContext()\l+ configureKeyMapping()\l# self()\l# setContext()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRa_1_1Gui_1_1KeyMappingManageable.html",tooltip=" "];
}
