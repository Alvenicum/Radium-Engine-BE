digraph "Ra::Gui::WindowQt"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{Ra::Gui::WindowQt\n|# m_context\l# m_updatePending\l# m_glInitialized\l|+ WindowQt()\l+ ~WindowQt()\l+ resizeEvent()\l+ showEvent()\l+ exposeEvent()\l+ enterEvent()\l+ leaveEvent()\l+ makeCurrent()\l+ doneCurrent()\l+ activateScopedContext()\l+ context()\l+ isOpenGlInitialized()\l+ cleanupGL()\l+ screenChanged()\l# initialize()\l# resizeInternal()\l# initializeGL()\l# deinitializeGL()\l# resizeGL()\l# getProcAddress()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Base class for OpenGL widgets, compatble with Qt and globjects/glbindings."];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{Ra::Gui::Viewer\n|# m_renderers\l# m_pendingRenderers\l# m_currentRenderer\l# m_pickingManager\l# m_isBrushPickingEnabled\l# m_brushRadius\l# m_camera\l# m_gizmoManager\l# m_backgroundColor\l# m_customKeyActions\l# m_activeContext\l|+ Viewer()\l+ ~Viewer()\l+ setupKeyMappingCallbacks()\l+ prepareDisplay()\l+ getContext()\l+ setCameraManipulator()\l+ getCameraManipulator()\l+ resetToDefaultCamera()\l+ getGizmoManager()\l+ getRenderer()\l+ getRenderer()\l+ addRenderer()\l+ getPickingManager()\l+ update()\l+ startRendering()\l+ swapBuffers()\l+ getDepthUnderMouse()\l+ processPicking()\l+ fitCameraToScene()\l+ fitCamera()\l+ getRenderersName()\l+ grabFrame()\l+ enableDebug()\l+ getBackgroundColor()\l+ addKeyPressEventAction()\l+ addKeyReleaseEventAction()\l+ reloadShaders()\l+ displayTexture()\l+ changeRenderer()\l+ enablePostProcess()\l+ enableDebugDraw()\l+ setBackgroundColor()\l+ displayHelpDialog()\l# createGizmoManager()\l# initializeRenderer()\l# initializeGL()\l# resizeGL()\l# getPickingMode()\l# showEvent()\l# focusOutEvent()\l# keyPressEvent()\l# keyReleaseEvent()\l# mousePressEvent()\l# mouseReleaseEvent()\l# mouseMoveEvent()\l# wheelEvent()\l# handleKeyPressEvent()\l# handleKeyReleaseEvent()\l# handleMousePressEvent()\l# handleMouseReleaseEvent()\l# handleMouseMoveEvent()\l# handleWheelEvent()\l* processPicking()\l* fitCameraToScene()\l* fitCamera()\l* getRenderersName()\l* grabFrame()\l* enableDebug()\l* getBackgroundColor()\l* addKeyPressEventAction()\l* addKeyReleaseEventAction()\l* keyPressEvent()\l* keyReleaseEvent()\l* mousePressEvent()\l* mouseReleaseEvent()\l* mouseMoveEvent()\l* wheelEvent()\l* handleKeyPressEvent()\l* handleKeyReleaseEvent()\l* handleMousePressEvent()\l* handleMouseReleaseEvent()\l* handleMouseMoveEvent()\l* handleWheelEvent()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRa_1_1Gui_1_1Viewer.html",tooltip=" "];
}
