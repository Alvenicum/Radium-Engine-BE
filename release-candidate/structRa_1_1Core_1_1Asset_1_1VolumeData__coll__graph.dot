digraph "Ra::Core::Asset::VolumeData"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{Ra::Core::Asset::VolumeData\n|+ boundingBox\l+ densityToModel\l+ modelToWorld\l|+ VolumeData()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{Ra::Core::Asset::AssetData\n|# m_name\l|+ AssetData()\l+ AssetData()\l+ ~AssetData()\l+ getName()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRa_1_1Core_1_1Asset_1_1AssetData.html",tooltip=" "];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +volume" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{Ra::Core::Geometry\l::AbstractVolume\n|# m_type\l|+ AbstractVolume()\l+ operator=()\l+ ~AbstractVolume()\l+ getType()\l+ getValue()\l+ displayInfo()\l+ isParametric()\l+ isDiscrete()\l+ isDense()\l+ isSparse()\l# AbstractVolume()\l# setType()\l* isParametric()\l* isDiscrete()\l* isDense()\l* isSparse()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRa_1_1Core_1_1Geometry_1_1AbstractVolume.html",tooltip=" "];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{Ra::Core::Geometry\l::AbstractGeometry\n||+ ~AbstractGeometry()\l+ AbstractGeometry()\l+ AbstractGeometry()\l+ operator=()\l+ clear()\l+ computeAabb()\l+ getAabbObservable()\l# isAabbValid()\l# getAabb()\l# invalidateAabb()\l# setAabb()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structRa_1_1Core_1_1Geometry_1_1AbstractGeometry.html",tooltip=" "];
  Node5 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +sigma_a\n+sigma_s" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{Ra::Core::Utils::ColorBase\l\< Scalar \>\n||+ ColorBase()\l+ ColorBase()\l+ ColorBase()\l+ ColorBase()\l+ operator VectorType()\l+ rgb()\l+ rgb()\l+ alpha()\l+ alpha()\l+ hasValidAlpha()\l+ toRGBA32()\l+ toARGB32()\l+ sRGBToLinearRGB()\l+ linearRGBTosRGB()\l+ fromRGB()\l+ Alpha()\l+ Black()\l+ Red()\l+ Green()\l+ Blue()\l+ Yellow()\l+ Magenta()\l+ Cyan()\l+ White()\l+ Grey()\l+ Skin()\l+ getNamedColor()\l+ fromChars()\l+ fromRGB24()\l+ fromRGBA32()\l+ fromARGB32()\l+ fromHSV()\l+ scatter()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRa_1_1Core_1_1Utils_1_1ColorBase.html",tooltip=" "];
  Node6 -> Node5 [dir="back",color="orange",fontsize="10",style="solid",label=" \< Scalar \>" ,fontname="Helvetica"];
  Node6 [label="{Ra::Core::Utils::ColorBase\l\< _Scalar \>\n||+ ColorBase()\l+ ColorBase()\l+ ColorBase()\l+ ColorBase()\l+ operator VectorType()\l+ rgb()\l+ rgb()\l+ alpha()\l+ alpha()\l+ hasValidAlpha()\l+ toRGBA32()\l+ toARGB32()\l+ sRGBToLinearRGB()\l+ linearRGBTosRGB()\l+ fromRGB()\l+ Alpha()\l+ Black()\l+ Red()\l+ Green()\l+ Blue()\l+ Yellow()\l+ Magenta()\l+ Cyan()\l+ White()\l+ Grey()\l+ Skin()\l+ getNamedColor()\l+ fromChars()\l+ fromRGB24()\l+ fromRGBA32()\l+ fromARGB32()\l+ fromHSV()\l+ scatter()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRa_1_1Core_1_1Utils_1_1ColorBase.html",tooltip=" "];
}
