digraph "Ra::Engine::Rendering::ForwardRenderer"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{Ra::Engine::Rendering\l::ForwardRenderer\n|# m_fbo\l# m_postprocessFbo\l# m_oitFbo\l# m_uiXrayFbo\l# m_volumeFbo\l# m_transparentRenderObjects\l# m_fancyTransparentCount\l# m_volumetricRenderObjects\l# m_fancyVolumetricCount\l# m_pingPongSize\l# m_textures\l# m_shadowMaps\l# m_lightMatrices\l# m_wireframes\l# ShadowMapSize\l|+ ForwardRenderer()\l+ ~ForwardRenderer()\l+ getRendererName()\l+ buildRenderTechnique()\l# initializeInternal()\l# resizeInternal()\l# updateStepInternal()\l# postProcessInternal()\l# renderInternal()\l# debugInternal()\l# uiInternal()\l# renderBackground()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{Ra::Engine::Rendering\l::Renderer\n|# m_width\l# m_height\l# m_renderObjectManager\l# m_lightmanagers\l# m_renderQueuesUpToDate\l# m_fancyRenderObjects\l# m_debugRenderObjects\l# m_xrayRenderObjects\l# m_uiRenderObjects\l# m_quadMesh\l# m_drawDebug\l# m_wireframe\l# m_postProcessEnabled\l# m_depthTexture\l# m_fancyTexture\l# m_secondaryTextures\l|+ Renderer()\l+ ~Renderer()\l+ getTimerData()\l+ getDisplayTexture()\l+ lockRendering()\l+ unlockRendering()\l+ toggleWireframe()\l+ enableWireframe()\l+ toggleDrawDebug()\l+ enableDebugDraw()\l+ enablePostProcess()\l+ render()\l+ initialize()\l+ resize()\l+ addPickingRequest()\l+ getPickingResults()\l+ getPickingQueries()\l+ setMousePosition()\l+ setBrushRadius()\l+ hasLight()\l+ setBackgroundColor()\l+ getBackgroundColor()\l+ addLight()\l+ reloadShaders()\l+ displayTexture()\l+ getAvailableTextures()\l+ getRendererName()\l+ buildRenderTechnique()\l+ buildAllRenderTechniques()\l+ grabFrame()\l+ doPickingNow()\l# initializeInternal()\l# resizeInternal()\l# updateStepInternal()\l# renderInternal()\l# postProcessInternal()\l# debugInternal()\l# uiInternal()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRa_1_1Engine_1_1Rendering_1_1Renderer.html",tooltip=" "];
  Node3 -> Node2 [color="grey25",fontsize="10",style="solid",label=" #m_shaderProgramManager" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{Ra::Engine::Data::Shader\lProgramManager\n||+ ShaderProgramManager()\l+ ~ShaderProgramManager()\l+ ShaderProgramManager()\l+ operator=()\l+ addShaderProgram()\l+ getShaderProgram()\l+ getShaderProgram()\l+ reloadAllShaderPrograms()\l+ reloadNotCompiledShaderPrograms()\l+ addNamedString()\l+ reloadNamedString()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRa_1_1Engine_1_1Data_1_1ShaderProgramManager.html",tooltip=" "];
  Node4 -> Node2 [color="grey25",fontsize="10",style="solid",label=" #m_displayedTexture" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{Ra::Engine::Data::Texture\n||+ Texture()\l+ operator=()\l+ Texture()\l+ ~Texture()\l+ initializeGL()\l+ bind()\l+ bindImageTexture()\l+ getName()\l+ updateData()\l+ updateParameters()\l+ linearize()\l+ format()\l+ width()\l+ height()\l+ depth()\l+ texels()\l+ texture()\l+ resize()\l+ getParameters()\l+ getParameters()\l+ setParameters()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRa_1_1Engine_1_1Data_1_1Texture.html",tooltip=" "];
}
