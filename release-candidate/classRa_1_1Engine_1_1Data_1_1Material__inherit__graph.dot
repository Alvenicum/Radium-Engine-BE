digraph "Ra::Engine::Data::Material"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{Ra::Engine::Data::Material\n|# m_instanceName\l# m_aspect\l# m_isDirty\l|+ ~Material()\l+ getInstanceName()\l+ getMaterialName()\l+ setMaterialAspect()\l+ getMaterialAspect()\l+ isTransparent()\l+ getPropertyList()\l+ setColoredByVertexAttrib()\l+ isColoredByVertexAttrib()\l+ needUpdate()\l# Material()\l# setMaterialName()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{Ra::Engine::Data::Shader\lParameterProvider\n|# m_renderParameters\l|+ ~ShaderParameterProvider()\l+ getParameters()\l+ getParameters()\l+ updateGL()\l+ updateFromParameters()\l+ getPropertyList()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRa_1_1Engine_1_1Data_1_1ShaderParameterProvider.html",tooltip=" "];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{Ra::Engine::Data::BlinnPhong\lMaterial\n|+ m_kd\l+ m_ks\l+ m_ns\l+ m_alpha\l+ m_perVertexColor\l+ m_renderAsSplat\l|+ BlinnPhongMaterial()\l+ ~BlinnPhongMaterial()\l+ updateGL()\l+ updateFromParameters()\l+ isTransparent()\l+ addTexture()\l+ getTexture()\l+ getParametersMetadata()\l+ setColoredByVertexAttrib()\l+ isColoredByVertexAttrib()\l+ addTexture()\l+ registerMaterial()\l+ unregisterMaterial()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRa_1_1Engine_1_1Data_1_1BlinnPhongMaterial.html",tooltip=" "];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{Ra::Engine::Data::RawShader\lMaterial\n||+ RawShaderMaterial()\l+ ~RawShaderMaterial()\l+ RawShaderMaterial()\l+ getParameters()\l+ getParameters()\l+ registerDefaultTechnique()\l+ updateShaders()\l+ updateGL()\l+ registerMaterial()\l+ unregisterMaterial()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRa_1_1Engine_1_1Data_1_1RawShaderMaterial.html",tooltip=" "];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{Ra::Engine::Data::Simple\lMaterial\n|+ m_color\l+ m_perVertexColor\l|+ SimpleMaterial()\l+ ~SimpleMaterial()\l+ updateGL()\l+ addTexture()\l+ addTexture()\l+ getTexture()\l+ setColoredByVertexAttrib()\l+ isColoredByVertexAttrib()\l# loadMetaData()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRa_1_1Engine_1_1Data_1_1SimpleMaterial.html",tooltip=" "];
  Node5 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node6 [label="{Ra::Engine::Data::Lambertian\lMaterial\n||+ LambertianMaterial()\l+ ~LambertianMaterial()\l+ updateFromParameters()\l+ getParametersMetadata()\l+ registerMaterial()\l+ unregisterMaterial()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRa_1_1Engine_1_1Data_1_1LambertianMaterial.html",tooltip=" "];
  Node5 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node7 [label="{Ra::Engine::Data::PlainMaterial\n||+ PlainMaterial()\l+ ~PlainMaterial()\l+ updateFromParameters()\l+ getParametersMetadata()\l+ registerMaterial()\l+ unregisterMaterial()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRa_1_1Engine_1_1Data_1_1PlainMaterial.html",tooltip=" "];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node8 [label="{Ra::Engine::Data::Volumetric\lMaterial\n|+ m_sigma_a\l+ m_sigma_s\l+ m_g\l+ m_scale\l+ m_stepsize\l+ m_modelToMedium\l|+ VolumetricMaterial()\l+ ~VolumetricMaterial()\l+ updateGL()\l+ updateFromParameters()\l+ isTransparent()\l+ setTexture()\l+ getTexture()\l+ getParametersMetadata()\l+ registerMaterial()\l+ unregisterMaterial()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRa_1_1Engine_1_1Data_1_1VolumetricMaterial.html",tooltip=" "];
}
